// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: prefer_final_fields, public_member_api_docs, prefer_single_quotes, omit_local_variable_types, unnecessary_this

import 'dart:async';

import 'package:flutter/material.dart';

/// A  class generated by flappy_translator package containing localized strings
class I18n {
  static String get savedForecastFailure => _getText('savedForecastFailure');

  static String get saveForecastFailure => _getText('saveForecastFailure');

  static String get noInternetConnection => _getText('noInternetConnection');

  static String get notInTheCity => _getText('notInTheCity');

  static String get cannotLoadCityForecast =>
      _getText('cannotLoadCityForecast');

  static String get locationServiceNotAvaliable =>
      _getText('locationServiceNotAvaliable');

  static String get locationPermissionDeniedForever =>
      _getText('locationPermissionDeniedForever');

  static String get locationPermissionDenied =>
      _getText('locationPermissionDenied');

  static String get cityDoesNotExists => _getText('cityDoesNotExists');

  static String get signIn => _getText('signIn');

  static String get logIn => _getText('logIn');

  static String get account => _getText('account');

  static String get addCity => _getText('addCity');

  static String get humidity => _getText('humidity');

  static String get metrePerSecond => _getText('metrePerSecond');

  static String get windSpeed => _getText('windSpeed');

  static String get pressure => _getText('pressure');

  static String get feelsLike => _getText('feelsLike');

  static String get ok => _getText('ok');

  static String get delete => _getText('delete');

  static String get refresh => _getText('refresh');

  static String get loadFromLocation => _getText('loadFromLocation');

  static String get no => _getText('no');

  static String get chooseAppColor => _getText('chooseAppColor');

  static String get language => _getText('language');

  static String get tempType => _getText('tempType');

  static String get appDescription => _getText('appDescription');

  static Map<String, String> _localizedValues;

  static Map<String, String> _ruValues = {
    'savedForecastFailure':
        'Не удалось загрузить данные прогноза погоды с вашего устройства!',
    'saveForecastFailure':
        'Не удалось сохранить данные прогноза погоды на ваше устройство!',
    'noInternetConnection': 'Нету подключения к интернету!',
    'notInTheCity': 'Вы не находитесь в каком либо городе или посёлке!',
    'cannotLoadCityForecast': 'Не удалось загрузить прогноз погоды города!',
    'locationServiceNotAvaliable':
        'Получение геолокации недоступно на вашем телефоне',
    'locationPermissionDeniedForever':
        'Запрос на доступ к геолокации отменен навсегда!',
    'locationPermissionDenied': 'Запрос на доступ к геолокации отклонен!',
    'cityDoesNotExists': 'Такого города не существует!',
    'signIn': 'Регистрация',
    'logIn': 'Вход',
    'account': 'Аккаунт',
    'addCity': 'Добавить город',
    'humidity': 'Влажность',
    'metrePerSecond': 'м/с',
    'windSpeed': 'Скорость ветра',
    'pressure': 'Давление',
    'feelsLike': 'По ощущениям',
    'ok': 'OK',
    'delete': 'Удалить',
    'refresh': 'Перезагрузить',
    'loadFromLocation': 'Загрузить погоду из локации?',
    'no': 'Нет',
    'chooseAppColor': 'Выберите цвет приложения',
    'language': 'Язык',
    'tempType': 'Тип температуры',
    'appDescription':
        ' D&L Weather - это первое приложение, созданное нашими участниками стартапа D&L Development. Оно будет развиваться в дальнейшем будущем, вместе с тем будут увеличиваться наши знания и опыт. Спасибо, что выбрали нас! Эта поддержка очень важна нам.',
  };

  static Map<String, String> _enValues = {
    'savedForecastFailure': 'Cannot load locally saved forecast!',
    'saveForecastFailure': 'Cannot save forecast!',
    'noInternetConnection': 'You have not connection to internet!',
    'notInTheCity': 'You are not located in some city or country!',
    'cannotLoadCityForecast': 'Failed to load forecast of the city!',
    'locationServiceNotAvaliable':
        'Location service is not avaliable on your phone!',
    'locationPermissionDeniedForever': 'Location permission denied forever!',
    'locationPermissionDenied': 'Location permission denied!',
    'cityDoesNotExists': 'This city doesnt exists!',
    'signIn': 'Sign in',
    'logIn': 'Log in',
    'account': 'Account',
    'addCity': 'Add city',
    'humidity': 'Humidity',
    'metrePerSecond': 'm/s',
    'windSpeed': 'Wind speed',
    'pressure': 'Pressure',
    'feelsLike': 'Feels like',
    'ok': 'OK',
    'delete': 'Delete',
    'refresh': 'Refresh',
    'loadFromLocation': 'Load weather from location?',
    'no': 'No',
    'chooseAppColor': 'Choose app color',
    'language': 'Language',
    'tempType': 'Temperature type',
    'appDescription':
        ' D&L Weather - first app, that has been created by D&L Development team. It would develop in near future. Thanks for choosing us! We need this support very much.',
  };

  static Map<String, Map<String, String>> _allValues = {
    'ru': _ruValues,
    'en': _enValues,
  };

  I18n(Locale locale) {
    _locale = locale;
    _localizedValues = null;
  }

  static Locale _locale;

  static String _getText(String key) {
    return _localizedValues[key] ?? '** $key not found';
  }

  static Locale get currentLocale => _locale;

  static String get currentLanguage => _locale.languageCode;

  static Future<I18n> load(Locale locale) async {
    final translations = I18n(locale);
    _localizedValues = _allValues[locale.toString()];
    return translations;
  }
}

class I18nDelegate extends LocalizationsDelegate<I18n> {
  const I18nDelegate();

  static final Set<Locale> supportedLocals = {
    Locale('ru'),
    Locale('en'),
  };

  @override
  bool isSupported(Locale locale) => supportedLocals.contains(locale);

  @override
  Future<I18n> load(Locale locale) => I18n.load(locale);

  @override
  bool shouldReload(I18nDelegate old) => false;
}
